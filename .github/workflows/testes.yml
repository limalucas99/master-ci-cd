name: Execução de Testes
on:
    workflow_call:
jobs:
    unit-test:
        name: Testes de Unidade
        runs-on: ubuntu-latest
        steps:
          - name: Obtendo o código do projeto
            uses: actions/checkout@v4
          - name: Setup dotnet
            uses: actions/setup-dotnet@v4
            with:
              dotnet-version: "8.0.300"
          - name: Execução do Teste de unidade
            working-directory: ./src
            run: dotnet test ./Review-Filmes.Test.Unit/Review-Filmes.Test.Unit.csproj
            
    integration-test:
        name: Testes de Integração
        runs-on: ubuntu-latest
        services:
          postgres:
            image: postgres:latest
            ports:
                - 5432:5432
            env:
                POSTGRES_USER: review
                POSTGRES_PASSWORD: postgrespwd
                POSTGRES_DB: review-filmes
        steps:
          - name: Obtendo o código do projeto
            uses: actions/checkout@v4
          - name: Setup dotnet
            uses: actions/setup-dotnet@v4
            with:
              dotnet-version: "8.0.300"
          - name: Execução do Teste de Integração
            working-directory: ./src
            run: dotnet test ./Review-Filmes.Test.Integration/Review-Filmes.Test.Integration.csproj
            env: 
              ConnectionStrings__DefaultConnection: "Host=localhost;Database=review-filmes;Username=review;Password=postgrespwd"
    sonarqube:
        name: Scan com o Sonarqube
        runs-on: windows-latest
        steps:
          - name: Set up JDK 17
            uses: actions/setup-java@v4
            with:
              java-version: 17
              distribution: 'zulu' # Alternative distribution options are available.
          - uses: actions/checkout@v4
            with:
              fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          - name: Cache SonarQube Cloud packages
            uses: actions/cache@v4
            with:
              path: ~\sonar\cache
              key: ${{ runner.os }}-sonar
              restore-keys: ${{ runner.os }}-sonar
          - name: Cache SonarQube Cloud scanner
            id: cache-sonar-scanner
            uses: actions/cache@v4
            with:
              path: .\.sonar\scanner
              key: ${{ runner.os }}-sonar-scanner
              restore-keys: ${{ runner.os }}-sonar-scanner
          - name: Install SonarQube Cloud scanner
            working-directory: ./src
            if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
            shell: powershell
            run: |
              New-Item -Path .\.sonar\scanner -ItemType Directory
              dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          - name: Build and analyze
            working-directory: ./src
            env:
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            shell: powershell
            run: |
              .\.sonar\scanner\dotnet-sonarscanner begin /k:"limalucas99_master-ci-cd" /o:"limalucas99" /d:sonar.login="4e35307ffa8083c24b409682b1539d89206bf42d" /d:sonar.host.url="https://sonarcloud.io"
              dotnet build ./Review-Filmes.sln
              .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="4e35307ffa8083c24b409682b1539d89206bf42d"

