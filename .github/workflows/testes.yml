name: Execução de Testes
on:
    workflow_call:
jobs:
    unit-test:
        name: Testes de Unidade
        runs-on: ubuntu-latest
        steps:
          - name: Obtendo o código do projeto
            uses: actions/checkout@v4
          - name: Setup dotnet
            uses: actions/setup-dotnet@v4
            with:
              dotnet-version: "8.0.300"
          - name: Execução do Teste de unidade
            working-directory: ./src
            run: dotnet test ./Review-Filmes.Test.Unit/Review-Filmes.Test.Unit.csproj
            
    integration-test:
        name: Testes de Integração
        runs-on: ubuntu-latest
        services:
          postgres:
            image: postgres:latest
            ports:
                - 5432:5432
            env:
                POSTGRES_USER: review
                POSTGRES_PASSWORD: postgrespwd
                POSTGRES_DB: review-filmes
        steps:
          - name: Obtendo o código do projeto
            uses: actions/checkout@v4
          - name: Setup dotnet
            uses: actions/setup-dotnet@v4
            with:
              dotnet-version: "8.0.300"
          - name: Execução do Teste de Integração
            working-directory: ./src
            run: dotnet test ./Review-Filmes.Test.Integration/Review-Filmes.Test.Integration.csproj
            env: 
              ConnectionStrings__DefaultConnection: "Host=localhost;Database=review-filmes;Username=review;Password=postgrespwd"
    sonarqube:
      name: Scan com o SonarQube
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
          with: { fetch-depth: 0 }
        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with: { dotnet-version: "8.0.300" }
        - name: Install SonarScanner
          run: dotnet tool install --global dotnet-sonarscanner
        - name: Begin SonarCloud Analysis
          working-directory: ./src
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          shell: bash
          run: |
            echo "Token length: ${#SONAR_TOKEN}"
            dotnet sonarscanner begin \
              /k:"limalucas99_master-ci-cd" \
              /o:"limalucas99" \
              /d:sonar.host.url="https://sonarcloud.io" \
              /d:sonar.login="${SONAR_TOKEN}"
        - name: Build
          working-directory: ./src
          run: dotnet build ./Review-Filmes.sln
        - name: End SonarCloud Analysis
          working-directory: ./src
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          shell: bash
          run: |
            dotnet sonarscanner end \
              /d:sonar.login="${SONAR_TOKEN}"

